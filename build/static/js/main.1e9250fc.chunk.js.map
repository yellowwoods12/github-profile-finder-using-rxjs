{"version":3,"sources":["components/UserForm.jsx","components/Profile.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["UserForm","props","react_default","a","createElement","className","onSubmit","getUser","type","placeholder","name","Profile","data","Object","values","map","user","key","id","src","avatar_url","alt","bio","login","location","followers","following","public_repos","App","state","show","_callee","e","userName","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","then","res","json","_this","setState","stop","this","logo","components_UserForm","components_Profile","userInfo","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1e9250fc.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserForm = props => {\n  return (\n    <div className=\"d-flex content-center py-10\">\n      <form\n        onSubmit={props.getUser}\n        className=\"user-form d-flex content-center\"\n      >\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          placeholder=\"Search user here...\"\n          name=\"userName\"\n        />\n        <button type=\"submit\" className=\"btn btn-primary btn-medium\">\n          Seach\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default UserForm;","import React from \"react\";\n\nconst Profile = props => {\n  const data = Object.values(props);\n\n  return (\n    <div className=\"container\">\n      {data.map(user => {\n        return (\n          <div className=\"profile\" key={user.id}>\n            <div className=\"profile__img\">\n              <img\n                className=\"avatar150 avatar-radius\"\n                src={user.avatar_url}\n                alt=\"\"\n              />\n              <p>\n                <span className=\"font-w700\">{user.bio}</span>\n              </p>\n            </div>\n            <div className=\"profile__author d-flex content-between\">\n              <div className=\"profile__author-name\">\n                <p className=\"profile__title\">\n                  <span>Name:</span> {user.name}\n                </p>\n                <p className=\"profile__title-sup\">\n                  <span>Username:</span> {user.login}\n                </p>\n                <p>\n                  <span>Location:</span> {user.location}\n                </p>\n              </div>\n              <div className=\"profile__author-details\">\n                <p>\n                  <span>Followes:</span> {user.followers}\n                </p>\n                <p>\n                  <span>Following:</span> {user.following}\n                </p>\n                <p>\n                  <span>Public Repository:</span> {user.public_repos}\n                </p>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Form from \"./components/UserForm\";\nimport Profile from \"./components/Profile\";\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\n\nclass App extends Component {\n  state = {\n    user: [],\n    show: false\n  };\n\n  getUser = async e => {\n    e.preventDefault();\n    const userName = e.target.elements.userName.value;\n\n    fetch(`https://api.github.com/users/${userName}`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          user: data,\n          show: true\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"container d-flex content-between\">\n          <header className=\"app__header-top\">\n            <img src={logo} className=\"app__logo\" alt=\"logo\" />\n            <h2 className=\"title font-sm\">\n              GitProfile - Github profile Finder\n            </h2>\n          </header>\n          <Form getUser={this.getUser} />\n        </div>\n        {this.state.show && <Profile userInfo={this.state.user} />}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}